<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java 作业 Gourmet Coffee System 实验1</title>
      <link href="/2023/04/22/java003/"/>
      <url>/2023/04/22/java003/</url>
      
        <content type="html"><![CDATA[<h1 id="为大家提供一个小小的思路"><a href="#为大家提供一个小小的思路" class="headerlink" title="为大家提供一个小小的思路"></a>为大家提供一个小小的思路</h1><h3 id="SalesFormatter接口"><a href="#SalesFormatter接口" class="headerlink" title="SalesFormatter接口"></a>SalesFormatter接口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">package GourmetCoffee;</span><br><span class="line"></span><br><span class="line">public interface SalesFormatter &#123;</span><br><span class="line">public abstract String formatSales(Sales sales);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlainTextSalesFormatter类"><a href="#PlainTextSalesFormatter类" class="headerlink" title="PlainTextSalesFormatter类"></a>PlainTextSalesFormatter类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">package GourmetCoffee;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.io.*;</span><br><span class="line"> </span><br><span class="line">public class PlainTextSalesFormatter implements SalesFormatter&#123;</span><br><span class="line"> </span><br><span class="line">private static PlainTextSalesFormatter singletonInstance;</span><br><span class="line"></span><br><span class="line">private PlainTextSalesFormatter()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static PlainTextSalesFormatter getSingletonInstance()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">if(singletonInstance==null) </span><br><span class="line">&#123;</span><br><span class="line">return singletonInstance=new PlainTextSalesFormatter();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return singletonInstance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">private ArrayList&lt;String&gt; info=new ArrayList&lt;String&gt;();</span><br><span class="line">public String formatSales(Sales sales)</span><br><span class="line">&#123;</span><br><span class="line">int k=1;</span><br><span class="line"></span><br><span class="line">for(Order order:sales)</span><br><span class="line">&#123;</span><br><span class="line">info.add(&quot;------------------------\n&quot;);</span><br><span class="line">info.add(&quot;Order &quot;+k+&quot;\n\n&quot;);</span><br><span class="line">for(OrderItem orderItem:order)</span><br><span class="line">&#123;</span><br><span class="line">info.add(orderItem.getQuantity()+&quot; &quot;+orderItem.getProduct().getCode()+&quot; &quot;+orderItem.getProduct().getPrice()+&quot;\n\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">info.add(&quot;Total = &quot;+order.getTotalCost()+&quot;\n&quot;);</span><br><span class="line">k++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">String res=&quot;&quot;;</span><br><span class="line">for(int i=0;i&lt;info.size();i++)</span><br><span class="line">&#123;</span><br><span class="line">res+=info.get(i);</span><br><span class="line">&#125;</span><br><span class="line">return res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HTMLSalesFormatter类"><a href="#HTMLSalesFormatter类" class="headerlink" title="HTMLSalesFormatter类"></a>HTMLSalesFormatter类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package GourmetCoffee;</span><br><span class="line">import java.util.*;</span><br><span class="line">public class HTMLSalesFormatter implements SalesFormatter&#123;</span><br><span class="line"> </span><br><span class="line">private static HTMLSalesFormatter singletonInstance;</span><br><span class="line"></span><br><span class="line">private HTMLSalesFormatter()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public static HTMLSalesFormatter getSingletonInstance()</span><br><span class="line">&#123;</span><br><span class="line">if(singletonInstance==null) </span><br><span class="line">&#123;</span><br><span class="line">return singletonInstance=new HTMLSalesFormatter();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return singletonInstance;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">private ArrayList&lt;String&gt; output=new ArrayList&lt;String&gt;();</span><br><span class="line">public String formatSales(Sales sales)</span><br><span class="line">&#123;</span><br><span class="line">output.add(&quot;&lt;html&gt;\n&quot;+&quot;  &lt;body&gt;\n&quot;+&quot;    &lt;center&gt;&lt;h2&gt;Orders&lt;/h2&gt;&lt;/center&gt;\n&quot;);</span><br><span class="line"></span><br><span class="line">for(Order order:sales)</span><br><span class="line">&#123;</span><br><span class="line">output.add(&quot;    &lt;hr&gt;\n&quot;+&quot;    &lt;h4&gt;Total = &quot;+order.getTotalCost()+&quot;&lt;/h4&gt;\n&quot;);</span><br><span class="line"></span><br><span class="line">for(OrderItem orderItem:order)</span><br><span class="line">&#123;</span><br><span class="line">output.add(&quot;      &lt;p&gt;\n&quot;+&quot;        &lt;b&gt;code:&lt;/b&gt; &quot;+orderItem.getProduct().getCode()+&quot;&lt;br&gt;\n&quot;);</span><br><span class="line">output.add(&quot;        &lt;b&gt;quantity:&lt;/b&gt; &quot;+orderItem.getQuantity()+&quot;&lt;br&gt;\n&quot;);</span><br><span class="line">output.add(&quot;        &lt;b&gt;price:&lt;/b&gt; &quot;+orderItem.getProduct().getPrice()+&quot;\n      &lt;/p&gt;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output.add(&quot;  &lt;/body&gt;\n&quot;+&quot;&lt;/html&gt;&quot;);</span><br><span class="line">String res=&quot;&quot;;</span><br><span class="line">for(int i=0;i&lt;output.size();i++)</span><br><span class="line">&#123;</span><br><span class="line">res+=output.get(i);</span><br><span class="line">&#125;</span><br><span class="line">return res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="XMLSalesFormatter类"><a href="#XMLSalesFormatter类" class="headerlink" title="XMLSalesFormatter类"></a>XMLSalesFormatter类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">package GourmetCoffee;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">public class XMLSalesFormatter implements SalesFormatter&#123;</span><br><span class="line"></span><br><span class="line">private static XMLSalesFormatter singletonInstance;</span><br><span class="line"></span><br><span class="line">private XMLSalesFormatter()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public static XMLSalesFormatter getSingletonInstance()</span><br><span class="line">&#123;</span><br><span class="line">if(singletonInstance==null) </span><br><span class="line">&#123;</span><br><span class="line">return singletonInstance=new XMLSalesFormatter();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return singletonInstance;</span><br><span class="line">&#125;</span><br><span class="line">private ArrayList&lt;String&gt; output=new ArrayList&lt;String&gt;();</span><br><span class="line">public String formatSales(Sales sales) &#123;</span><br><span class="line">output.add(&quot;&lt;Sales&gt;\n&quot;);</span><br><span class="line">for(Order order: sales)</span><br><span class="line">&#123;</span><br><span class="line">output.add(&quot;  &lt;Order total=\&quot;&quot;+ order.getTotalCost()+&quot;\&quot;&gt;\n&quot;);</span><br><span class="line">for(OrderItem orderitem: order)</span><br><span class="line">&#123;</span><br><span class="line">output.add(&quot;    &lt;OrderItem quantity=\&quot;&quot;+ orderitem.getQuantity()+&quot;\&quot; price=\&quot;&quot;+orderitem.getProduct()+&quot;\&quot;&gt;code1&lt;/OrderItem&gt;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">output.add(&quot;  &lt;/Order&gt;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">output.add(&quot;&lt;/Sales&gt;\n&quot;);</span><br><span class="line">String res = &quot;&quot; ;</span><br><span class="line">for(int i=0;i&lt;output.size();i++) &#123;</span><br><span class="line">res+=output.get(i);</span><br><span class="line">&#125;</span><br><span class="line">return res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="GourmetCoffee类"><a href="#GourmetCoffee类" class="headerlink" title="GourmetCoffee类"></a>GourmetCoffee类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line">package GourmetCoffee;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line">//import java.text.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * This class implements a gourmet coffee system.</span><br><span class="line"> *</span><br><span class="line"> * @author author name</span><br><span class="line"> * @version 1.1.0</span><br><span class="line"> * @see Product</span><br><span class="line"> * @see Coffee</span><br><span class="line"> * @see CoffeeBrewer</span><br><span class="line"> * @see Catalog</span><br><span class="line"> * @see OrderItem</span><br><span class="line"> * @see Order</span><br><span class="line"> * @see SalesFormatter</span><br><span class="line"> * @see PlainTextSalesFormatter</span><br><span class="line"> * @see HTMLSalesFormatter</span><br><span class="line"> * @see XMLSalesFormatter</span><br><span class="line"> */</span><br><span class="line">public class GourmetCoffee  &#123;</span><br><span class="line"></span><br><span class="line">private static BufferedReader  stdIn =</span><br><span class="line">new  BufferedReader(new  InputStreamReader(System.in));</span><br><span class="line">private static PrintWriter  stdOut = new  PrintWriter(System.out, true);</span><br><span class="line">private static PrintWriter  stdErr = new  PrintWriter(System.err, true);</span><br><span class="line"></span><br><span class="line">private Sales  sales;</span><br><span class="line"></span><br><span class="line">private SalesFormatter  salesFormatter;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Loads data into the catalog and starts the application.</span><br><span class="line"> *</span><br><span class="line"> * @param args  String arguments.  Not used.</span><br><span class="line"> * @throws IOException if there are errors in the input.</span><br><span class="line"> */</span><br><span class="line">public static void  main(String[]  args) throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">GourmetCoffee  application = new  GourmetCoffee();</span><br><span class="line">application.run();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Constructs a &lt;code&gt;GourmetCoffee&lt;/code&gt; object and</span><br><span class="line"> * initializes the catalog and sales data.</span><br><span class="line"> *</span><br><span class="line"> * @param initialCatalog a product catalog</span><br><span class="line"> */</span><br><span class="line">private GourmetCoffee() &#123;</span><br><span class="line"></span><br><span class="line">this.sales = new Sales();</span><br><span class="line">this.salesFormatter = </span><br><span class="line">PlainTextSalesFormatter.getSingletonInstance();</span><br><span class="line"></span><br><span class="line">loadSales(loadCatalog());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Creates an empty catalog and then add products to it.</span><br><span class="line"> *</span><br><span class="line"> * @return a product catalog</span><br><span class="line"> */</span><br><span class="line">private Catalog loadCatalog() &#123;</span><br><span class="line"></span><br><span class="line">Catalog catalog = new Catalog();</span><br><span class="line"></span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C001&quot;, &quot;Colombia, Whole, 1 lb&quot;, 17.99,</span><br><span class="line">&quot;Colombia&quot;, &quot;Medium&quot;, &quot;Rich and Hearty&quot;, &quot;Rich&quot;,</span><br><span class="line">&quot;Medium&quot;, &quot;Full&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C002&quot;, &quot;Colombia, Ground, 1 lb&quot;, 18.75,</span><br><span class="line">&quot;Colombia&quot;, &quot;Medium&quot;, &quot;Rich and Hearty&quot;, &quot;Rich&quot;,</span><br><span class="line">&quot;Medium&quot;,&quot;Full&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C003&quot;, &quot;Italian Roasts, Whole, 1 lb&quot;,</span><br><span class="line">16.80, &quot;Latin American Blend&quot;, &quot;Italian Roast&quot;,</span><br><span class="line">&quot;Dark and heavy&quot;, &quot;Intense&quot;, &quot;Low&quot;, &quot;Medium&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C004&quot;, &quot;Italian Roasts, Ground, 1 lb&quot;,</span><br><span class="line">17.55, &quot;Latin American Blend&quot;, &quot;Italian Roast&quot;,</span><br><span class="line">&quot;Dark and heavy&quot;, &quot;Intense&quot;, &quot;Low&quot;, &quot;Medium&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C005&quot;, &quot;French Roasts, Whole, 1 lb&quot;,</span><br><span class="line">16.80, &quot;Latin American Blend&quot;, &quot;French Roast&quot;,</span><br><span class="line">&quot;Bittersweet, full intense&quot;, &quot;Intense, full&quot;, &quot;None&quot;, &quot;Medium&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C006&quot;, &quot;French Roasts, Ground, 1 lb&quot;,</span><br><span class="line">17.55, &quot;Latin American Blend&quot;, &quot;French Roast&quot;,</span><br><span class="line">&quot;Bittersweet, full intense&quot;, &quot;Intense, full&quot;, &quot;None&quot;, &quot;Medium&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C007&quot;, &quot;Guatemala, Ground, 1 lb&quot;, 17.99,</span><br><span class="line">&quot;Guatemala&quot;, &quot;Medium&quot;, &quot;Rich and complex&quot;, &quot;Spicy&quot;,</span><br><span class="line">&quot;Medium to high&quot;, &quot;Medium to full&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C008&quot;, &quot;Guatemala, Ground, 1 lb&quot;, 18.75,</span><br><span class="line">&quot;Guatemala&quot;, &quot;Medium&quot;, &quot;Rich and complex&quot;, &quot;Spicy&quot;,</span><br><span class="line">&quot;Medium to high&quot;, &quot;Medium to full&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C009&quot;, &quot;Guatemala, Whole, 1 lb&quot;, 19.99,</span><br><span class="line">&quot;Sumatra&quot;, &quot;Medium&quot;, &quot;Vibrant and powdery&quot;,</span><br><span class="line">&quot;Like dark chocolate&quot;, &quot;Gentle&quot;, &quot;Rich and full&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C010&quot;, &quot;Guatemala, Ground, 1 lb&quot;, 20.50,</span><br><span class="line">&quot;Sumatra&quot;, &quot;Medium&quot;, &quot;Vibrant and powdery&quot;,</span><br><span class="line">&quot;Like dark chocolate&quot;, &quot;Gentle&quot;, &quot;Rich and full&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C011&quot;, &quot;Special Blend, Whole, 1 lb&quot;,</span><br><span class="line">16.80, &quot;Latin American Blend&quot;, &quot;Dark roast&quot;,</span><br><span class="line">&quot;Full, roasted flavor&quot;, &quot;Hearty&quot;, &quot;Bold and rich&quot;, &quot;Full&quot;));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Coffee(&quot;C012&quot;, &quot;Special Blend, Ground, 1 lb&quot;,</span><br><span class="line">17.55, &quot;Latin American Blend&quot;, &quot;Dark roast&quot;,</span><br><span class="line">&quot;Full, roasted flavor&quot;, &quot;Hearty&quot;, &quot;Bold and rich&quot;, &quot;Full&quot;));</span><br><span class="line"></span><br><span class="line">catalog.addProduct(</span><br><span class="line">new CoffeeBrewer(&quot;B001&quot;, &quot;Home Coffee Brewer&quot;,</span><br><span class="line">150.00, &quot;Brewer 100&quot;, &quot;Pourover&quot;, 6));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new CoffeeBrewer(&quot;B002&quot;, &quot;Coffee Brewer, 2 Warmers&quot;,</span><br><span class="line">200.00, &quot;Brewer 200&quot;, &quot;Pourover&quot;, 12));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new CoffeeBrewer(&quot;B003&quot;, &quot;Coffee Brewer, 3 Warmers&quot;,</span><br><span class="line">280.00, &quot;Brewer 210&quot;, &quot;Pourover&quot;, 12));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new CoffeeBrewer(&quot;B004&quot;, &quot;Commercial Brewer, 20 cups&quot;,</span><br><span class="line">380.00, &quot;Quick Coffee 100&quot;, &quot;Automatic&quot;, 20));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new CoffeeBrewer(&quot;B005&quot;, &quot;Commercial Brewer, 40 cups&quot;,</span><br><span class="line">480.00, &quot;Quick Coffee 200&quot;, &quot;Automatic&quot;, 40));</span><br><span class="line"></span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A001&quot;, &quot;Almond Flavored Syrup&quot;, 9.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A002&quot;, &quot;Irish Creme Flavored Syrup&quot;, 9.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A003&quot;, &quot;Mint Flavored syrup&quot;, 9.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A004&quot;, &quot;Caramel Flavored Syrup&quot;, 9.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A005&quot;, &quot;Gourmet Coffee Cookies&quot;, 12.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A006&quot;, &quot;Gourmet Coffee Travel Thermo&quot;, 18.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A007&quot;, &quot;Gourmet Coffee Ceramic Mug&quot;, 8.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A008&quot;, &quot;Gourmet Coffee 12 Filters&quot;, 15.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A009&quot;, &quot;Gourmet Coffee 36 Filters&quot;, 45.00));</span><br><span class="line"></span><br><span class="line">return catalog;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Initializes the sales object.</span><br><span class="line"> */</span><br><span class="line">private void loadSales(Catalog catalog) &#123;</span><br><span class="line"></span><br><span class="line">Order orderOne = new Order();</span><br><span class="line"></span><br><span class="line">orderOne.addItem(new OrderItem(catalog.getProduct(&quot;C001&quot;), 5));</span><br><span class="line">this.sales.addOrder(orderOne);</span><br><span class="line"></span><br><span class="line">Order orderTwo = new Order();</span><br><span class="line"></span><br><span class="line">orderTwo.addItem(new OrderItem(catalog.getProduct(&quot;C002&quot;), 2));</span><br><span class="line">orderTwo.addItem(new OrderItem(catalog.getProduct(&quot;A001&quot;), 2));</span><br><span class="line">this.sales.addOrder(orderTwo);</span><br><span class="line"></span><br><span class="line">Order orderThree = new Order();</span><br><span class="line"></span><br><span class="line">orderThree.addItem(new OrderItem(catalog.getProduct(&quot;B002&quot;), 1));</span><br><span class="line">this.sales.addOrder(orderThree);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Displays a menu of options and verifies the user&#x27;s choice.</span><br><span class="line"> *</span><br><span class="line"> * @return an integer in the range [0,3]</span><br><span class="line"> */</span><br><span class="line">private int  getChoice() throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">int  input;</span><br><span class="line"></span><br><span class="line">do  &#123;</span><br><span class="line">try  &#123;</span><br><span class="line">stdErr.println();</span><br><span class="line">stdErr.print(&quot;[0]  Quit\n&quot;</span><br><span class="line">             + &quot;[1]  Display sales (Plain Text)\n&quot;</span><br><span class="line">             + &quot;[2]  Display sales (HTML)\n&quot;</span><br><span class="line">             + &quot;[3]  Display sales (XML)\n&quot;</span><br><span class="line">             + &quot;choice&gt; &quot;);</span><br><span class="line">stdErr.flush();</span><br><span class="line"></span><br><span class="line">input = Integer.parseInt(stdIn.readLine());</span><br><span class="line"></span><br><span class="line">stdErr.println();</span><br><span class="line"></span><br><span class="line">if (0 &lt;= input &amp;&amp; 3 &gt;= input)  &#123;</span><br><span class="line">break;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">stdErr.println(&quot;Invalid choice:  &quot; + input);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (NumberFormatException  nfe)  &#123;</span><br><span class="line">stdErr.println(nfe);</span><br><span class="line">&#125;</span><br><span class="line">&#125;  while (true);</span><br><span class="line"></span><br><span class="line">return  input;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Changes the sales formatter.</span><br><span class="line"> *</span><br><span class="line"> * @param newFormatter a sales formatter</span><br><span class="line"> */</span><br><span class="line">private void setSalesFormatter(SalesFormatter newFormatter)&#123;</span><br><span class="line">this.salesFormatter = newFormatter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Displays the sales information in the current format.</span><br><span class="line"> */</span><br><span class="line">private void displaySales() &#123;</span><br><span class="line">System.out.println(this.salesFormatter.formatSales(sales));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Presents the user with a menu of options and executes the</span><br><span class="line"> * selected task.</span><br><span class="line"> */</span><br><span class="line">private void run() throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">int  choice = getChoice();</span><br><span class="line"></span><br><span class="line">while (choice != 0)  &#123;</span><br><span class="line"></span><br><span class="line">if (choice == 1)  &#123;</span><br><span class="line"></span><br><span class="line">this.setSalesFormatter(PlainTextSalesFormatter.getSingletonInstance());</span><br><span class="line">this.displaySales();</span><br><span class="line"></span><br><span class="line">&#125; else if (choice == 2)  &#123;</span><br><span class="line"></span><br><span class="line">this.setSalesFormatter(HTMLSalesFormatter.getSingletonInstance());</span><br><span class="line">this.displaySales();</span><br><span class="line"></span><br><span class="line">&#125; else if (choice == 3)  &#123;</span><br><span class="line"></span><br><span class="line">this.setSalesFormatter(XMLSalesFormatter.getSingletonInstance());</span><br><span class="line">this.displaySales();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">choice = getChoice();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h4 id="接口的继承及重写"><a href="#接口的继承及重写" class="headerlink" title="接口的继承及重写"></a>接口的继承及重写</h4><h4 id="在GourmetCoffee类中通过setSalesFormatter-改写本类中的salesFormatter，通过formatSales实现多态"><a href="#在GourmetCoffee类中通过setSalesFormatter-改写本类中的salesFormatter，通过formatSales实现多态" class="headerlink" title="在GourmetCoffee类中通过setSalesFormatter()改写本类中的salesFormatter，通过formatSales实现多态"></a>在GourmetCoffee类中通过setSalesFormatter()改写本类中的salesFormatter，通过formatSales实现多态</h4>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 作业 Gourmet Coffee System 作业2</title>
      <link href="/2023/04/13/java002/"/>
      <url>/2023/04/13/java002/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-作业-Gourmet-Coffee-System-作业2"><a href="#Java-作业-Gourmet-Coffee-System-作业2" class="headerlink" title="Java 作业 Gourmet Coffee System 作业2"></a>Java 作业 Gourmet Coffee System 作业2</h1><h3 id="Catalog-Class"><a href="#Catalog-Class" class="headerlink" title="Catalog Class"></a>Catalog Class</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package ProductOrder;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class Catalog implements Iterable&lt;Product&gt;&#123;</span><br><span class="line">private ArrayList&lt;Product&gt; products;</span><br><span class="line">public Catalog() &#123;</span><br><span class="line">this.products = new ArrayList&lt;&gt;();</span><br><span class="line">&#125;</span><br><span class="line">public void addProduct(Product product) &#123;</span><br><span class="line">this.products.add(product);</span><br><span class="line">&#125;</span><br><span class="line">public Iterator&lt;Product&gt; iterator() &#123;</span><br><span class="line">        return products.iterator();</span><br><span class="line">    &#125;</span><br><span class="line">public Product getProduct(String code)&#123;</span><br><span class="line">        for(Product product:this.products)&#123;</span><br><span class="line">            if(product.getCode().equals(code))&#123;</span><br><span class="line">                return product;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">&#125;</span><br><span class="line">public int getNumberOfProducts()&#123;</span><br><span class="line">        return this.products.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Oeder-Class"><a href="#Oeder-Class" class="headerlink" title="Oeder Class"></a>Oeder Class</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">package ProductOrder;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line">public class Order implements Iterable&lt;OrderItem&gt;&#123;</span><br><span class="line">private ArrayList&lt;OrderItem&gt;items;</span><br><span class="line">public Order() &#123;</span><br><span class="line">this.items = new ArrayList&lt;&gt;();</span><br><span class="line">&#125;</span><br><span class="line">public Iterator&lt;OrderItem&gt; iterator() &#123;</span><br><span class="line">return items.iterator();</span><br><span class="line">&#125;</span><br><span class="line">public void addItem(OrderItem orderItem) &#123;</span><br><span class="line">this.items.add(orderItem);</span><br><span class="line">&#125;</span><br><span class="line">public void removeItem(OrderItem orderItem) &#123;</span><br><span class="line">this.items.remove(orderItem);</span><br><span class="line">&#125;</span><br><span class="line">public OrderItem getItem(Product product) &#123;</span><br><span class="line">for(OrderItem orderitem:this.items ) &#123;</span><br><span class="line">if(orderitem.getProduct().equals(product))</span><br><span class="line">return orderitem;</span><br><span class="line">&#125;</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line">public int getNumberOfItems() &#123;</span><br><span class="line">return this.items.size();</span><br><span class="line">&#125;</span><br><span class="line">public double getTotalCost() &#123;</span><br><span class="line">double totalCost = 0;</span><br><span class="line">for(OrderItem orderitem:this.items) &#123;</span><br><span class="line">totalCost+=orderitem.getValue();</span><br><span class="line">&#125;</span><br><span class="line">return totalCost;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Sales-Class"><a href="#Sales-Class" class="headerlink" title="Sales Class"></a>Sales Class</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package ProductOrder;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line">public class Sales implements Iterable&lt;Order&gt;&#123;</span><br><span class="line">private ArrayList&lt;Order&gt;orders;</span><br><span class="line">public Sales() &#123;</span><br><span class="line">this.orders = new ArrayList&lt;&gt;();</span><br><span class="line">&#125;</span><br><span class="line">public void addOrder(Order order) &#123;</span><br><span class="line">this.orders.add(order);</span><br><span class="line">&#125;</span><br><span class="line">public Iterator&lt;Order&gt; iterator() &#123;</span><br><span class="line">return orders.iterator();</span><br><span class="line">&#125;</span><br><span class="line">public int getNumberOfOrders() &#123;</span><br><span class="line">return this.orders.size();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="GourmetCoffee-Class"><a href="#GourmetCoffee-Class" class="headerlink" title="GourmetCoffee Class"></a>GourmetCoffee Class</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line">import java.text.*;</span><br><span class="line"></span><br><span class="line">public class GourmetCoffee  &#123;</span><br><span class="line"></span><br><span class="line">private static BufferedReader  stdIn =</span><br><span class="line">new  BufferedReader(new  InputStreamReader(System.in));</span><br><span class="line">private static PrintWriter  stdOut =</span><br><span class="line">new  PrintWriter(System.out, true);</span><br><span class="line">private static PrintWriter  stdErr =</span><br><span class="line">new  PrintWriter(System.err, true);</span><br><span class="line"></span><br><span class="line">private static final NumberFormat CURRENCY =</span><br><span class="line">NumberFormat.getCurrencyInstance();</span><br><span class="line"></span><br><span class="line">private Catalog  catalog;</span><br><span class="line">private Order  currentOrder;</span><br><span class="line">private Sales  sales;</span><br><span class="line">public static void  main(String[]  args) throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">GourmetCoffee  application = new  GourmetCoffee();</span><br><span class="line">application.run();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">private GourmetCoffee() &#123;</span><br><span class="line"></span><br><span class="line">this.catalog = loadCatalog();</span><br><span class="line">this.sales = loadSales(this.catalog);</span><br><span class="line">this.currentOrder = new Order();</span><br><span class="line">&#125;</span><br><span class="line">private Catalog loadCatalog() &#123;</span><br><span class="line"></span><br><span class="line">Catalog catalog = new Catalog();</span><br><span class="line"></span><br><span class="line">catalog.addProduct(new Coffee(</span><br><span class="line">&quot;C001&quot;, &quot;Colombia, Whole, 1 lb&quot;, 17.99,</span><br><span class="line">&quot;Colombia&quot;, &quot;Medium&quot;, &quot;Rich and Hearty&quot;, &quot;Rich&quot;, &quot;Medium&quot;, &quot;Full&quot;));</span><br><span class="line">catalog.addProduct(new Coffee(</span><br><span class="line">&quot;C002&quot;, &quot;Colombia, Ground, 1 lb&quot;, 18.75,</span><br><span class="line">&quot;Colombia&quot;, &quot;Medium&quot;, &quot;Rich and Hearty&quot;, &quot;Rich&quot;, &quot;Medium&quot;,&quot;Full&quot;));</span><br><span class="line">catalog.addProduct(new Coffee(</span><br><span class="line">&quot;C003&quot;, &quot;Italian Roasts, Whole, 1 lb&quot;, 16.80,</span><br><span class="line">&quot;Latin American Blend&quot;, &quot;Italian Roast&quot;, &quot;Dark and heavy&quot;,</span><br><span class="line">&quot;Intense&quot;, &quot;Low&quot;, &quot;Medium&quot;));</span><br><span class="line">catalog.addProduct(new Coffee(</span><br><span class="line">&quot;C004&quot;, &quot;Italian Roasts, Ground, 1 lb&quot;, 17.55,</span><br><span class="line">&quot;Latin American Blend&quot;, &quot;Italian Roast&quot;, &quot;Dark and heavy&quot;,</span><br><span class="line">&quot;Intense&quot;, &quot;Low&quot;, &quot;Medium&quot;));</span><br><span class="line">catalog.addProduct(new Coffee(</span><br><span class="line">&quot;C005&quot;, &quot;French Roasts, Whole, 1 lb&quot;, 16.80,</span><br><span class="line">&quot;Latin American Blend&quot;, &quot;French Roast&quot;, &quot;Bittersweet, full intense&quot;,</span><br><span class="line">&quot;Intense, full&quot;, &quot;None&quot;, &quot;Medium&quot;));</span><br><span class="line">catalog.addProduct(new CoffeeBrewer(</span><br><span class="line">&quot;B001&quot;, &quot;Home Coffee Brewer&quot;, 150.00,</span><br><span class="line">&quot;Brewer 100&quot;, &quot;Pourover&quot;, 6));</span><br><span class="line">catalog.addProduct(new CoffeeBrewer(</span><br><span class="line">&quot;B002&quot;, &quot;Coffee Brewer, 2 Warmers&quot;, 200.00,</span><br><span class="line">&quot;Brewer 200&quot;, &quot;Pourover&quot;, 12));</span><br><span class="line">catalog.addProduct(new CoffeeBrewer(</span><br><span class="line">&quot;B003&quot;, &quot;Coffee Brewer, 3 Warmers&quot;, 280.00,</span><br><span class="line">&quot;Brewer 210&quot;, &quot;Pourover&quot;, 12));</span><br><span class="line"></span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A001&quot;, &quot;Almond Flavored Syrup&quot;, 9.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A002&quot;, &quot;Irish Creme Flavored Syrup&quot;, 9.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A003&quot;, &quot;Mint Flavored syrup&quot;, 9.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A004&quot;, &quot;Caramel Flavored Syrup&quot;, 9.00));</span><br><span class="line">catalog.addProduct(</span><br><span class="line">new Product(&quot;A005&quot;, &quot;Gourmet Coffee Cookies&quot;, 12.00));</span><br><span class="line"></span><br><span class="line">return catalog;</span><br><span class="line">&#125;</span><br><span class="line">private Sales loadSales(Catalog catalog) &#123;</span><br><span class="line"></span><br><span class="line">Sales sales = new Sales();</span><br><span class="line">Order[] orders = new Order[6];</span><br><span class="line"></span><br><span class="line">orders[0] = new Order();</span><br><span class="line">orders[0].addItem(new OrderItem(catalog.getProduct(&quot;C001&quot;), 5));</span><br><span class="line">sales.addOrder(orders[0]);</span><br><span class="line"></span><br><span class="line">orders[1] = new Order();</span><br><span class="line">orders[1].addItem(new OrderItem(catalog.getProduct(&quot;C002&quot;), 2));</span><br><span class="line">orders[1].addItem(new OrderItem(catalog.getProduct(&quot;A001&quot;), 2));</span><br><span class="line">orders[1].addItem(new OrderItem(catalog.getProduct(&quot;A003&quot;), 2));</span><br><span class="line">sales.addOrder(orders[1]);</span><br><span class="line"></span><br><span class="line">orders[2] = new Order();</span><br><span class="line">orders[2].addItem(new OrderItem(catalog.getProduct(&quot;B002&quot;), 1));</span><br><span class="line">orders[2].addItem(new OrderItem(catalog.getProduct(&quot;A003&quot;), 3));</span><br><span class="line">sales.addOrder(orders[2]);</span><br><span class="line"></span><br><span class="line">orders[3] = new Order();</span><br><span class="line">orders[3].addItem(new OrderItem(catalog.getProduct(&quot;B003&quot;), 2));</span><br><span class="line">orders[3].addItem(new OrderItem(catalog.getProduct(&quot;C001&quot;), 3));</span><br><span class="line">orders[3].addItem(new OrderItem(catalog.getProduct(&quot;C003&quot;), 3));</span><br><span class="line">orders[3].addItem(new OrderItem(catalog.getProduct(&quot;C005&quot;), 3));</span><br><span class="line">orders[3].addItem(new OrderItem(catalog.getProduct(&quot;A001&quot;), 3));</span><br><span class="line">orders[3].addItem(new OrderItem(catalog.getProduct(&quot;A004&quot;), 2));</span><br><span class="line">sales.addOrder(orders[3]);</span><br><span class="line"></span><br><span class="line">orders[4] = new Order();</span><br><span class="line">orders[4].addItem(new OrderItem(catalog.getProduct(&quot;B001&quot;), 1));</span><br><span class="line">orders[4].addItem(new OrderItem(catalog.getProduct(&quot;C002&quot;), 2));</span><br><span class="line">orders[4].addItem(new OrderItem(catalog.getProduct(&quot;C003&quot;), 2));</span><br><span class="line">orders[4].addItem(new OrderItem(catalog.getProduct(&quot;A001&quot;), 2));</span><br><span class="line">orders[4].addItem(new OrderItem(catalog.getProduct(&quot;A002&quot;), 6));</span><br><span class="line">sales.addOrder(orders[4]);</span><br><span class="line"></span><br><span class="line">orders[5] = new Order();</span><br><span class="line">orders[5].addItem(new OrderItem(catalog.getProduct(&quot;B001&quot;), 1));</span><br><span class="line">orders[5].addItem(new OrderItem(catalog.getProduct(&quot;C001&quot;), 1));</span><br><span class="line">orders[5].addItem(new OrderItem(catalog.getProduct(&quot;C005&quot;), 5));</span><br><span class="line">orders[5].addItem(new OrderItem(catalog.getProduct(&quot;A001&quot;), 5));</span><br><span class="line">orders[5].addItem(new OrderItem(catalog.getProduct(&quot;A004&quot;), 4));</span><br><span class="line">sales.addOrder(orders[5]);</span><br><span class="line"></span><br><span class="line">return sales;</span><br><span class="line">&#125;</span><br><span class="line">private void run() throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">int  choice = getChoice();</span><br><span class="line"></span><br><span class="line">while (choice != 0)  &#123;</span><br><span class="line"></span><br><span class="line">if (choice == 1)  &#123;</span><br><span class="line">displayCatalog();</span><br><span class="line">&#125; else if (choice == 2)  &#123;</span><br><span class="line">displayProductInfo();</span><br><span class="line">&#125; else if (choice == 3)  &#123;</span><br><span class="line">displayOrder();</span><br><span class="line">&#125; else if (choice == 4)  &#123;</span><br><span class="line">addModifyProduct();</span><br><span class="line">&#125; else if (choice == 5)  &#123;</span><br><span class="line">removeProduct();</span><br><span class="line">&#125; else if (choice == 6)  &#123;</span><br><span class="line">saleOrder();</span><br><span class="line">&#125; else if (choice == 7)  &#123;</span><br><span class="line">displayOrdersSold();</span><br><span class="line">&#125; else if (choice == 8)  &#123;</span><br><span class="line">displayNumberOfOrders(readProduct());</span><br><span class="line">&#125; else if (choice == 9)  &#123;</span><br><span class="line">displayTotalQuantityOfProducts();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">choice = getChoice();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">private int  getChoice() throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">int  input;</span><br><span class="line"></span><br><span class="line">do  &#123;</span><br><span class="line">try  &#123;</span><br><span class="line">stdErr.println();</span><br><span class="line">stdErr.print(</span><br><span class="line">  &quot;[0] Quit\n&quot;</span><br><span class="line">+ &quot;[1] Display catalog\n&quot;</span><br><span class="line">+ &quot;[2] Display product\n&quot;</span><br><span class="line">+ &quot;[3] Display current order\n&quot;</span><br><span class="line">+ &quot;[4] Add|modify product to|in current order\n&quot;</span><br><span class="line">+ &quot;[5] Remove product from current order\n&quot;</span><br><span class="line">+ &quot;[6] Register sale of current order\n&quot;</span><br><span class="line">+ &quot;[7] Display sales\n&quot;</span><br><span class="line">+ &quot;[8] Display number of orders with a specific product\n&quot;</span><br><span class="line">+ &quot;[9] Display the total quantity sold for each product\n&quot;</span><br><span class="line">+ &quot;choice&gt; &quot;);</span><br><span class="line">stdErr.flush();</span><br><span class="line"></span><br><span class="line">input = Integer.parseInt(stdIn.readLine());</span><br><span class="line"></span><br><span class="line">stdErr.println();</span><br><span class="line"></span><br><span class="line">if (0 &lt;= input &amp;&amp; 9 &gt;= input)  &#123;</span><br><span class="line">break;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">stdErr.println(&quot;Invalid choice:  &quot; + input);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (NumberFormatException  nfe)  &#123;</span><br><span class="line">stdErr.println(nfe);</span><br><span class="line">&#125;</span><br><span class="line">&#125;  while (true);</span><br><span class="line"></span><br><span class="line">return  input;</span><br><span class="line">&#125;</span><br><span class="line">public void displayCatalog() &#123;</span><br><span class="line"></span><br><span class="line">int size = this.catalog.getNumberOfProducts();</span><br><span class="line"></span><br><span class="line">if (size == 0) &#123;</span><br><span class="line">stdErr.println(&quot;The catalog is empty&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">for (Product  product : this.catalog) &#123;</span><br><span class="line"></span><br><span class="line">stdOut.println(product.getCode() + &quot; &quot; +</span><br><span class="line">product.getDescription());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public void displayProductInfo() throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">Product product = readProduct();</span><br><span class="line"></span><br><span class="line">stdOut.println(&quot;  Description: &quot; + product.getDescription());</span><br><span class="line">stdOut.println(&quot;  Price: &quot; + product.getPrice());</span><br><span class="line">if (product instanceof Coffee) &#123;</span><br><span class="line"></span><br><span class="line">Coffee coffee = (Coffee) product;</span><br><span class="line"></span><br><span class="line">stdOut.println(&quot;  Origin: &quot; + coffee.getOrigin());</span><br><span class="line">stdOut.println(&quot;  Roast: &quot; + coffee.getRoast());</span><br><span class="line">stdOut.println(&quot;  Flavor: &quot; + coffee.getFlavor());</span><br><span class="line">stdOut.println(&quot;  Aroma: &quot; + coffee.getAroma());</span><br><span class="line">stdOut.println(&quot;  Acidity: &quot; + coffee.getAcidity());</span><br><span class="line">stdOut.println(&quot;  Body: &quot; + coffee.getBody());</span><br><span class="line">&#125; else if (product instanceof CoffeeBrewer) &#123;</span><br><span class="line"></span><br><span class="line">CoffeeBrewer brewer = (CoffeeBrewer) product;</span><br><span class="line"></span><br><span class="line">stdOut.println(&quot;  Model: &quot; + brewer.getModel());</span><br><span class="line">stdOut.println(&quot;  Water Supply: &quot; + brewer.getWaterSupply());</span><br><span class="line">stdOut.println(&quot;  Number of Cups: &quot; + brewer.getNumberOfCups());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public void displayOrder() &#123;</span><br><span class="line"></span><br><span class="line">int size = this.currentOrder.getNumberOfItems();</span><br><span class="line"></span><br><span class="line">if (size == 0) &#123;</span><br><span class="line">stdErr.println(&quot;The current order is empty&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">for (OrderItem  orderItem : this.currentOrder) &#123;</span><br><span class="line">stdOut.println(orderItem.toString());</span><br><span class="line">&#125;</span><br><span class="line">stdOut.println(&quot;Total: &quot; +</span><br><span class="line">CURRENCY.format(this.currentOrder.getTotalCost()));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public void addModifyProduct()  throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">Product product = readProduct();</span><br><span class="line">int quantity = readQuantity();</span><br><span class="line">OrderItem orderItem = this.currentOrder.getItem(product);</span><br><span class="line"></span><br><span class="line">if (orderItem == null) &#123;</span><br><span class="line">this.currentOrder.addItem(new OrderItem(product, quantity));</span><br><span class="line">stdOut.println(&quot;The product &quot; + product.getCode()</span><br><span class="line"> + &quot; has been added&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">orderItem.setQuantity(quantity);</span><br><span class="line">stdOut.println(&quot;The quantity of the product &quot; +</span><br><span class="line">product.getCode() + &quot; has been modified&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public void removeProduct()  throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">Product product = readProduct();</span><br><span class="line">OrderItem orderItem = this.currentOrder.getItem(product);</span><br><span class="line"></span><br><span class="line">if (orderItem != null) &#123;</span><br><span class="line">this.currentOrder.removeItem(orderItem);</span><br><span class="line">stdOut.println(&quot;The product &quot; + product.getCode()</span><br><span class="line"> + &quot; has been removed from the current order&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">stdErr.println(</span><br><span class="line">&quot;There are no products in the current order with that code&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public void saleOrder()  &#123;</span><br><span class="line"></span><br><span class="line">if (this.currentOrder.getNumberOfItems() &gt; 0) &#123;</span><br><span class="line">this.sales.addOrder(this.currentOrder);</span><br><span class="line">this.currentOrder = new Order();</span><br><span class="line">stdOut.println(&quot;The sale of the order has been registered&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">stdErr.println(&quot;The current order is empty&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public void displayOrdersSold() &#123;</span><br><span class="line"></span><br><span class="line">int numOrders = this.sales.getNumberOfOrders();</span><br><span class="line"></span><br><span class="line">if (numOrders != 0) &#123;</span><br><span class="line">int orderNumber = 1;</span><br><span class="line">for (Order  order : this.sales) &#123;</span><br><span class="line"></span><br><span class="line">stdOut.println(&quot;Order &quot; + orderNumber++);</span><br><span class="line"></span><br><span class="line">for (OrderItem  orderItem : order) &#123;</span><br><span class="line">stdOut.println(&quot;   &quot; + orderItem.toString());</span><br><span class="line">&#125;</span><br><span class="line">stdOut.println(&quot;   Total: &quot; +</span><br><span class="line">CURRENCY.format(order.getTotalCost()));</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">stdErr.println(&quot;There are no sales&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public void displayNumberOfOrders(Product product) &#123;</span><br><span class="line">int total = 0;</span><br><span class="line">for(Order order:sales) &#123;</span><br><span class="line">for(OrderItem orderItem:order) &#123;</span><br><span class="line">if(orderItem.getProduct().equals(product)) &#123;</span><br><span class="line">total++;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;Number of orders that contains the product &quot;+product.getCode()+&quot;: &quot;+total);</span><br><span class="line">&#125;</span><br><span class="line">public void displayTotalQuantityOfProducts() &#123;</span><br><span class="line"></span><br><span class="line">/* PLACE YOUR CODE HERE */</span><br><span class="line">for(Product product:catalog) &#123;</span><br><span class="line">int total = 0;</span><br><span class="line">for(Order order:sales) &#123;</span><br><span class="line">for(OrderItem orderItem:order) &#123;</span><br><span class="line">if(orderItem.getProduct().equals(product)) &#123;</span><br><span class="line">total+=orderItem.getQuantity();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(product.getCode()+&quot;: &quot;+total);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">private Product readProduct() throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">do  &#123;</span><br><span class="line">stdErr.print(&quot;Product code&gt; &quot;);</span><br><span class="line">stdErr.flush();</span><br><span class="line"></span><br><span class="line">Product product = this.catalog.getProduct(stdIn.readLine());</span><br><span class="line"></span><br><span class="line">if (product != null) &#123;</span><br><span class="line"></span><br><span class="line">return product;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">stdErr.println(&quot;There are no products with that code&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;  while (true);</span><br><span class="line">&#125;</span><br><span class="line">private int readQuantity() throws IOException  &#123;</span><br><span class="line"></span><br><span class="line">int quantity;</span><br><span class="line"></span><br><span class="line">do  &#123;</span><br><span class="line">try  &#123;</span><br><span class="line"></span><br><span class="line">stdErr.print(&quot;Quantity&gt; &quot;);</span><br><span class="line">stdErr.flush();</span><br><span class="line">quantity = Integer.parseInt(stdIn.readLine());</span><br><span class="line">if (quantity &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">return quantity;</span><br><span class="line"></span><br><span class="line">&#125; else  &#123;</span><br><span class="line">stdErr.println(</span><br><span class="line">&quot;Invalid input. Please enter a positive integer&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (NumberFormatException  nfe)  &#123;</span><br><span class="line">stdErr.println(nfe);</span><br><span class="line">&#125;</span><br><span class="line">&#125;  while (true);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又水了点代码，这回作业考察了iterator和arraylist，总体来说难度也不是很高</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java第一次作业纪实，订购产品及咖啡类</title>
      <link href="/2023/03/30/java001/"/>
      <url>/2023/03/30/java001/</url>
      
        <content type="html"><![CDATA[<p>水了一点代码，记录一下<br>Product类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">package ProductOrder;</span><br><span class="line"></span><br><span class="line">public class Product &#123;</span><br><span class="line">private String code;</span><br><span class="line">private String description;</span><br><span class="line">private double price;</span><br><span class="line"></span><br><span class="line">public String getCode() &#123;</span><br><span class="line">return code;</span><br><span class="line">&#125;</span><br><span class="line">public String getDescription() &#123;</span><br><span class="line">return description;</span><br><span class="line">&#125;</span><br><span class="line">public double getPrice() &#123;</span><br><span class="line">return price;</span><br><span class="line">&#125;</span><br><span class="line">public Product() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public Product(String initialCode,String initialDescription,double initialPrice) &#123;</span><br><span class="line">this.code = initialCode;</span><br><span class="line">this.description = initialDescription;</span><br><span class="line">this.price = initialPrice;</span><br><span class="line">&#125;</span><br><span class="line">public boolean equals(Object object) &#123;</span><br><span class="line">if(object instanceof Product) &#123;</span><br><span class="line">return ((Product)object).getCode().equals(this.getCode());</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">public String toString() &#123;</span><br><span class="line">return code + &quot;_&quot; + description + &quot;_&quot; + price;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderItem类</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">package ProductOrder;</span><br><span class="line"></span><br><span class="line">public class OrderItem &#123;</span><br><span class="line">private int quantity;</span><br><span class="line">private Product product;</span><br><span class="line">public Product <span class="function"><span class="title">getProduct</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> product;</span><br><span class="line">&#125;</span><br><span class="line">public int <span class="function"><span class="title">getQuantity</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> quantity;</span><br><span class="line">&#125;</span><br><span class="line">public void setQuantity(int newQuantity) &#123;</span><br><span class="line">this.quantity = newQuantity;</span><br><span class="line">&#125;</span><br><span class="line">public double <span class="function"><span class="title">getValue</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> product.getPrice() * quantity;</span><br><span class="line">&#125;</span><br><span class="line">public String <span class="function"><span class="title">toString</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> quantity + <span class="string">&quot; &quot;</span> + product.getCode() + <span class="string">&quot; &quot;</span> + product.getPrice();</span><br><span class="line">&#125;</span><br><span class="line">public OrderItem(Product initialProduct,int initialQuantity) &#123;</span><br><span class="line">this.product = initialProduct;</span><br><span class="line">this.quantity = initialQuantity;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Coffee类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package ProductOrder;</span><br><span class="line"></span><br><span class="line">public class OrderItem &#123;</span><br><span class="line">private int quantity;</span><br><span class="line">private Product product;</span><br><span class="line">public Product getProduct() &#123;</span><br><span class="line">return product;</span><br><span class="line">&#125;</span><br><span class="line">public int getQuantity() &#123;</span><br><span class="line">return quantity;</span><br><span class="line">&#125;</span><br><span class="line">public void setQuantity(int newQuantity) &#123;</span><br><span class="line">this.quantity = newQuantity;</span><br><span class="line">&#125;</span><br><span class="line">public double getValue() &#123;</span><br><span class="line">return product.getPrice() * quantity;</span><br><span class="line">&#125;</span><br><span class="line">public String toString() &#123;</span><br><span class="line">return quantity + &quot; &quot; + product.getCode() + &quot; &quot; + product.getPrice();</span><br><span class="line">&#125;</span><br><span class="line">public OrderItem(Product initialProduct,int initialQuantity) &#123;</span><br><span class="line">this.product = initialProduct;</span><br><span class="line">this.quantity = initialQuantity;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>CoffeeBrewer类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package ProductOrder;</span><br><span class="line"></span><br><span class="line">public class CoffeeBrewer extends Product&#123;</span><br><span class="line">String model;</span><br><span class="line">String waterSupply;</span><br><span class="line">int numberOfCups;</span><br><span class="line">public CoffeeBrewer(String iniCode,String iniDescription,double iniPrice</span><br><span class="line">,String iniModel,String iniWaterSupply,int iniNumberOfCups) &#123;</span><br><span class="line">super(iniCode,iniDescription,iniPrice);</span><br><span class="line">model = iniModel;</span><br><span class="line">waterSupply = iniWaterSupply;</span><br><span class="line">numberOfCups = iniNumberOfCups;</span><br><span class="line">&#125;</span><br><span class="line">public String getModel() &#123;</span><br><span class="line">return model;</span><br><span class="line">&#125;</span><br><span class="line">public String getWaterSupply() &#123;</span><br><span class="line">return waterSupply;</span><br><span class="line">&#125;</span><br><span class="line">public int getNumberOfCups() &#123;</span><br><span class="line">return numberOfCups;</span><br><span class="line">&#125;</span><br><span class="line">public String toString() &#123;</span><br><span class="line">return super.getCode() + &quot;_&quot; + super.getDescription() + &quot;_&quot; + super.getPrice() + &quot;_&quot; </span><br><span class="line">+ model + &quot;_&quot; + waterSupply + &quot;_&quot; + numberOfCups;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TestProduct类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">package ProductOrder;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class TestProduct &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) throws IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">String str1,str2,str3;</span><br><span class="line">double dou1 = 0;</span><br><span class="line">Product pro1 = new Product(&quot;001&quot;, &quot;Apple&quot;, 3.99);</span><br><span class="line">Product pro2 = new Product(&quot;002&quot;, &quot;Banana&quot;, 5.99);</span><br><span class="line">Product pro3 = new Product(&quot;003&quot;, &quot;Canyon&quot;, 21.99);</span><br><span class="line">Product pro4 = new Product(&quot;004&quot;, &quot;Dove&quot;, 6.99);</span><br><span class="line">Product pro5 = new Product(&quot;004&quot;, &quot;Eggs&quot;, 10.99);</span><br><span class="line"></span><br><span class="line">OrderItem bill1 = new OrderItem(pro1, 5);</span><br><span class="line">OrderItem bill2 = new OrderItem(pro1, 20);</span><br><span class="line">OrderItem bill3 = new OrderItem(pro2, 25);</span><br><span class="line">OrderItem bill4 = new OrderItem(pro5, 3);</span><br><span class="line">OrderItem bill5 = new OrderItem(pro4, 7);</span><br><span class="line">OrderItem bill6 = new OrderItem(pro1, 0);</span><br><span class="line">OrderItem bill7 = new OrderItem(pro5, 999);</span><br><span class="line">OrderItem bill8 = new OrderItem(pro5, 12);</span><br><span class="line">OrderItem bill9 = new OrderItem(pro2, 2);</span><br><span class="line">OrderItem bill10 = new OrderItem(pro3, 100);</span><br><span class="line"></span><br><span class="line">Coffee cof1 = new Coffee(&quot;01&quot;,&quot;Cappuccino&quot;,15.2,&quot;American&quot;,&quot;Cure&quot;,&quot;Sweet&quot;,&quot;Heavy&quot;,&quot;Small&quot;,&quot;Oval&quot;);</span><br><span class="line"></span><br><span class="line">CoffeeBrewer ord1 = new CoffeeBrewer(&quot;001&quot;,&quot;SUNNY&quot;,169.99,&quot;Abrasive&quot;,&quot;PrueWater&quot;,3);</span><br><span class="line">BufferedReader buf = null;//声明 BufferedReader 对象</span><br><span class="line">    buf = new BufferedReader(new InputStreamReader(System.in));//实例化 BufferedReader</span><br><span class="line">    String str = null;//接收输入内容</span><br><span class="line">    System.out.print(&quot;请输入新建Product,以“,”分开：&quot;);</span><br><span class="line">    str = buf.readLine();//读取输入内容</span><br><span class="line">    StringTokenizer st=new StringTokenizer(str,&quot;,&quot;);</span><br><span class="line">    str1 = st.nextToken();</span><br><span class="line">    str2 = st.nextToken();</span><br><span class="line">      str3 = st.nextToken();</span><br><span class="line">        dou1 = Double.parseDouble(str3);</span><br><span class="line">    Product pro6 = new Product(str1,str2,dou1);</span><br><span class="line">    if(pro4.equals(pro5)) &#123;</span><br><span class="line">    System.out.println(&quot;Yes!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">    System.out.println(&quot;No!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">System.out.println(bill10);</span><br><span class="line">System.out.println(cof1);</span><br><span class="line">System.out.println(pro6);</span><br><span class="line">System.out.println(ord1.getPrice());</span><br><span class="line">System.out.println(bill1.getQuantity());</span><br><span class="line">System.out.println(bill2.getProduct().getDescription());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本次作业考察了java基础类、类的继承的基础语法，以及tokenizer、bufferreader等库的使用，总体来说难度不大。</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++与OpenCV的贪吃蛇小游戏（简单版）</title>
      <link href="/2023/03/24/Cpp0324/"/>
      <url>/2023/03/24/Cpp0324/</url>
      
        <content type="html"><![CDATA[<p>本人蒟蒻一个，因为学习OpenCV途中收到了要写贪吃蛇小游戏的要求</p><p>于是上网广搜精华</p><p>震惊的发现他们写的贪吃蛇都用了很多复杂的函数（包括类啊巴拉巴拉，让人很难看懂）</p><p>于是我自己琢磨了很长时间</p><p>写出来了一个比较平易近人的贪吃蛇版本 </p><p>也恳请各位大佬指正写的不好的地方</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;Windows.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;opencv2/opencv.hpp&gt;</span><br><span class="line">#include &lt;time.h&gt;</span><br><span class="line">//Direction 0上 1是左 2是下 3是右</span><br><span class="line">using namespace std;</span><br><span class="line">using namespace cv;</span><br><span class="line">//定义每个方块的高度</span><br><span class="line">int height = 15;</span><br><span class="line">int width = 15;</span><br><span class="line">int Sizes = 20;//定义Size*Size的棋盘大小</span><br><span class="line">int Height = height * Sizes;</span><br><span class="line">int Width = width * Sizes;</span><br><span class="line">//记录现在的方向 长度</span><br><span class="line">int NowDirection = 1, Lenth;</span><br><span class="line">int Difficult = 500;</span><br><span class="line">bool Judge = true;</span><br><span class="line">//随机数类 记住一定要在函数外声明</span><br><span class="line">RNG rng = theRNG();</span><br><span class="line">//位置类 a数组记录蛇 Food记录食物</span><br><span class="line">class Position&#123;</span><br><span class="line">public:</span><br><span class="line">int x;</span><br><span class="line">int y;</span><br><span class="line">&#125;a[3000],Food;</span><br><span class="line">//方向输入</span><br><span class="line">void ReadMoveDirection(int LastTimeDirction) &#123;</span><br><span class="line">char pointKey = waitKey(Difficult);</span><br><span class="line">if(pointKey == &#x27;w&#x27;)</span><br><span class="line">NowDirection = 0;</span><br><span class="line">if(pointKey == &#x27;a&#x27;)</span><br><span class="line">NowDirection = 1;</span><br><span class="line">if(pointKey == &#x27;s&#x27;)</span><br><span class="line">NowDirection = 2;</span><br><span class="line">if(pointKey == &#x27;d&#x27;)</span><br><span class="line">NowDirection = 3;</span><br><span class="line">//确保不会向反方向走</span><br><span class="line">if (NowDirection == LastTimeDirction || NowDirection == LastTimeDirction + 2 || NowDirection == LastTimeDirction - 2 ) &#123;</span><br><span class="line">NowDirection = LastTimeDirction;</span><br><span class="line">&#125;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">//初始化界面 可没有</span><br><span class="line">void Start(void) &#123;</span><br><span class="line">Mat image(Height, Width, CV_8UC3, Scalar(255, 255, 255));</span><br><span class="line">char StartKey = &#x27;a&#x27;;</span><br><span class="line">putText(image, &quot;Press f to Start&quot;, Point(Width/2-120 ,Height/2 - 20 ), 2, 1, Scalar(0, 0, 0), 2);</span><br><span class="line">while (1) &#123;</span><br><span class="line">imshow(&quot;贪吃蛇~&quot;, image);</span><br><span class="line">char StartKey = waitKey(20);</span><br><span class="line">if (StartKey == &#x27;f&#x27;) &#123;</span><br><span class="line">destroyWindow(&quot;贪吃蛇~&quot;);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">//制作食物</span><br><span class="line">void MakeFood(void) &#123;</span><br><span class="line"></span><br><span class="line">while (1) &#123;</span><br><span class="line">bool s = true;</span><br><span class="line">int FoodX = rng.uniform(0, Sizes);</span><br><span class="line">int FoodY = rng.uniform(0, Sizes);</span><br><span class="line">for (int i = 1; i &lt;= Lenth; i++)</span><br><span class="line">if (a[i].x == FoodX &amp;&amp; a[i].y == FoodY) &#123;</span><br><span class="line">s = false;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">if (s) &#123;</span><br><span class="line">Food.x = FoodX;</span><br><span class="line">Food.y = FoodY;</span><br><span class="line">//cout &lt;&lt; FoodX &lt;&lt; &quot;TTT&quot; &lt;&lt; FoodY &lt;&lt; endl;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//判断是否食物被吃掉</span><br><span class="line">bool JudgeFood(void) &#123;</span><br><span class="line">if (a[1].x == Food.x &amp;&amp; a[1].y == Food.y) &#123;</span><br><span class="line">a[Lenth + 1].x = a[Lenth].x;</span><br><span class="line">a[Lenth + 1].y = a[Lenth].y;</span><br><span class="line">Lenth++;</span><br><span class="line"></span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">//蛇头包括蛇身的移动，后一块继承前一块</span><br><span class="line">void HeadMove(int MoveDirection,int len) &#123;</span><br><span class="line">if (MoveDirection == 0) &#123;</span><br><span class="line">for (int i = len; i &gt;= 2; i--) &#123;</span><br><span class="line">a[i].x = a[i - 1].x;</span><br><span class="line">a[i].y = a[i - 1].y;</span><br><span class="line">&#125;</span><br><span class="line">a[1].y--;</span><br><span class="line">&#125;</span><br><span class="line">if (MoveDirection == 1) &#123;</span><br><span class="line">for (int i = len; i &gt;= 2; i--) &#123;</span><br><span class="line">a[i].x = a[i - 1].x;</span><br><span class="line">a[i].y = a[i - 1].y;</span><br><span class="line">&#125;</span><br><span class="line">a[1].x--;</span><br><span class="line">&#125;</span><br><span class="line">if (MoveDirection == 2) &#123;</span><br><span class="line">for (int i = len; i &gt;= 2; i--) &#123;</span><br><span class="line">a[i].x = a[i - 1].x;</span><br><span class="line">a[i].y = a[i - 1].y;</span><br><span class="line">&#125;</span><br><span class="line">a[1].y++;</span><br><span class="line">&#125;</span><br><span class="line">if (MoveDirection == 3) &#123;</span><br><span class="line">for (int i = len; i &gt;= 2; i--) &#123;</span><br><span class="line">a[i].x = a[i - 1].x;</span><br><span class="line">a[i].y = a[i - 1].y;</span><br><span class="line">&#125;</span><br><span class="line">a[1].x++;</span><br><span class="line">&#125;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">//判断是否越界或者咬自己尾巴</span><br><span class="line">bool JudgeOver(void)&#123;</span><br><span class="line">if (a[1].x == 0 || a[1].x == Sizes || a[1].y == 0 || a[1].y == Sizes )</span><br><span class="line">return true;</span><br><span class="line">else &#123;</span><br><span class="line">for (int i = 2; i &lt;= Lenth; i++)</span><br><span class="line">if (a[i].x == a[1].x &amp;&amp; a[i].y == a[1].y)</span><br><span class="line">return true;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//游戏结束界面</span><br><span class="line">void GameOver(Mat PreImage) &#123;</span><br><span class="line">putText(PreImage, &quot;You Loss!  &quot;, Point(Width / 2 - 120, Height / 2 - 20), 2, 1, Scalar(5, 30, 216), 3);</span><br><span class="line">putText(PreImage, &quot;Your Score : &quot; + std::to_string(Lenth - 3), Point(Width / 2 - 120, Height / 2 + 10), 2, 1, Scalar(5, 30, 216), 3);</span><br><span class="line">imshow(&quot;GG!&quot;, PreImage);</span><br><span class="line">waitKey(0);</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">int main(int argc, char** argv) &#123;</span><br><span class="line">Start();</span><br><span class="line">MakeFood();</span><br><span class="line">//初始化蛇蛇</span><br><span class="line">Lenth = 3;</span><br><span class="line">a[1].x = Sizes / 2;</span><br><span class="line">a[1].y = Sizes / 2;</span><br><span class="line">a[2].x = a[1].x + 1;</span><br><span class="line">a[2].y = a[1].y;</span><br><span class="line">a[3].x = a[2].x + 1;</span><br><span class="line">a[3].y = a[2].y;</span><br><span class="line">Mat frame(Height, Width, CV_8UC3, Scalar(255, 255, 255));</span><br><span class="line">while(1)&#123;</span><br><span class="line">Mat frame(Height, Width, CV_8UC3, Scalar(255, 255, 255));</span><br><span class="line">ReadMoveDirection(NowDirection);</span><br><span class="line">HeadMove(NowDirection,Lenth);</span><br><span class="line">if (JudgeOver()) &#123;</span><br><span class="line">break;</span><br><span class="line">&#125;//先走再判断</span><br><span class="line">if (JudgeFood()) &#123;</span><br><span class="line">MakeFood();</span><br><span class="line">&#125;//如果食物被吃了再制造一个食物</span><br><span class="line">for (int j = 1; j &lt;= Lenth; j++) &#123;</span><br><span class="line">rectangle(frame, Rect(a[j].x * width, a[j].y * height, width, height), Scalar(255, 204, 51), -1);</span><br><span class="line">&#125;</span><br><span class="line">rectangle(frame, Rect(Food.x * width, Food.y * height, width, height), Scalar(255, 204, 51), -1);</span><br><span class="line">imshow(&quot;贪吃蛇 by RogicYu&quot;, frame);</span><br><span class="line">&#125;//显示蛇和食物，可以写进函数里，我懒了</span><br><span class="line">//出循环代表游戏结束</span><br><span class="line">destroyWindow(&quot;贪吃蛇 by RogicYu&quot;);</span><br><span class="line">GameOver(frame);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/24/hello-world/"/>
      <url>/2023/03/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
